<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOwAAADsAXkocb0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADh0lEQVRYR+1WS0wTURR9IiIfFXWjxvjbaFASN0hMNFJD0uCHthiJiRt1R2Ji3KiJJqbGqJ2BiiIt
        nQGicaV16Ye2qPhZSICwMIp/MdR/p8XEBNSoz3und3Acp9QBxI0nOYt5795z3+fe+4b9x0jhVOQKl9JU
        TJ/jC0c8UOaMyxzpiMvnN/U3LaCp8YFDkbZpCyAOwIl4HLHmqWQy9nBzd4a6c0X2ueLyY8MCNEadCWkr
        43wCuY0NnIlAuTMhPzEJmIKNNysTUj65jxw27s50xCXJPMjwtL8PbCaZEQKOEYQuGIXT0aHIfPmDUzwj
        Uv2ahY7MITXrALFDRnGNZe8CpuOrX/h5/m0vZyEhyYhQRHLWUKE0FoDgV7MA027V8Hmdtb+M298E+NyO
        2p+Bw56XLCxuITnrcMUbg/oAyKIn9XxCOBlg5m1vDI96Y0ziS+6e5BMjWmBhAIIfZuHqPJKyDqxlKLVP
        +uClrxq0IN/UAG3u7Nl3vO7J16p1uxaC7HLNUEPa8ME/A3xlYLtTkQ5gGdPU8MAWqw+OnN+lHa9nJ5kx
        1ioUwFichcQOdkUsodEhwCme0Wu4FHk7TQ0PV0Laq3dEZl0VcQGXyOSPAH69eo3ip75nLOjOounUgC7n
        1Tuufy8ld99yzEYmaVHJg1ng+1mvs/ReHepUkUlqwH3t0juueuFDx0HWJU0ik7RwKYFSvQZyYfcJ1PGS
        SWrYek9nr+lr6MUsx+TDsgPH5zT9O0z6PgQMGxeQ2wYJ2yLsIZM0CAk7MiLqvRM9zTQzhIp+uQR6fieI
        x7Fv0DAm325j8JKoX9NxklkauKFkQuJ+cGiHhhJgbbXTaYbh22/sE46EXFUZPZ6DTzJ8f9fPIWe3H8cF
        DEL5TiEZ67C/PZsHCXoYBAeMAda9CzyE03hjHEeufKbmEPIcSVkHiG8BsZdG8XTEHJrUql7lF3b56GKS
        s4ZyRV5hJp6Otj4/z7mudUrxIMlZx6aYNAd+wUyP14ywYL7sfh20bkpibNGj/UOCJ7aysKdOFTcLiiW7
        NtrAC6DZqOWWvHPcuR8SL5NkRoFWTz4I3pxyo4avfO77bQGLuk/qgqp8xFrE9eQ9RsBjDHm2gnh0FpQV
        Jpi2APw/gPHHsON6FhHtahn/NVx050KwfRkR4SPuvLDnVPK+w8I2shgn4NsfEs4Dk8eOO/8nCAnF0OMd
        9PUfFsHYDxz4tPJlNZx2AAAAAElFTkSuQmCC
</value>
  </data>
</root>